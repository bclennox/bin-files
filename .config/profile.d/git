alias ga='git add'
alias gb='git branch'
alias gc='git commit'
alias gcb='git checkout -b'
alias gcm='git checkout master'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdh='git diff HEAD'
alias gdm='git diff master'
alias gl='git log'
alias gp='git push -u origin $(git branch | grep "^*" | awk "{ print \$2 }")'
alias gs='git status'
alias gu='git fetch -p ; git rebase ; git branch --merged | grep -v master | grep -v "^\\*" | xargs git branch -d'

# Usage: m
#
# Climbs the directory tree until it reaches the root of a Git repository.
m(){
  dir=$PWD
  until [ -d "$dir/.git" ]; do
    dir=$(builtin cd "$dir/.." && pwd)
    if [[ $dir = '/' ]]; then
      echo "Couldn't find a .git directory. Are you in a git repo?"
      return 1
    fi
  done
  builtin cd "$dir" && pwd
}

# Usage: repo [id]
#
# Clone all your Git repos into ~/repos. Create a file named ~/repos/.repos
# containing the newline-separated repo names:
#
#   poweriq_web
#   poweriq_web_rpm
#   poweriq_core
#
# Then run `repo 1` to cd directly into ~/repos/poweriq_web. Or run `repo`
# with no argument to see the full list with numbers.
repo(){
  root=$HOME/repos
  projects=($(cat $root/.repos))
  pattern='^[0-9]+$'

  if [ -z "$1" ]; then
    echo "Select a project:"
    i=1
    for project in ${projects[@]}; do
      echo "  [$i] $project"
      i=$((i + 1))
    done
    echo -n '? '

    read id
  elif [[ $1 =~ $pattern ]]; then
    id=$1
  else
    return 1
  fi

  if [ $id = 0 ]; then
    cd $root
  else
    cd "$root/${projects[$((id - 1))]}"
  fi

  pwd
}
