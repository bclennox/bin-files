#!/bin/bash

stash_root="$HOME/repos/stash"

usage(){
  echo "Usage: $0 [-u] id"
  echo
  echo "Options:"
  echo
  echo "  -u  Unstash a set of changes"
  echo
  echo "Available stashes:"
  echo
  
  for path in $(find $stash_root -type d -maxdepth 1 -mindepth 1); do
    id=$(basename $path)
    description=$(cat $path/.description 2> /dev/null)
    
    echo "  $id - $description" 
  done
}

prepare_stash(){
  stash=$1
  paths=($(svn st | perl -lne 'print if /^[AM?]/' | awk '{ print $2 }'))
  
  if [ ${#paths[*]} = 0 ]; then
    echo "No local modifications."
  else
    if [ -f $stash/.description ]; then
      cat $stash/.description
      echo
    fi
    
    for path in ${paths[*]}; do
      echo "  $path"
    done
    
    echo
    echo -n "Stash these files to $stash? "
    read reply
    
    if [ "x${reply:0:1}" != "xy" ]; then
      exit 1
    else
      perform_stash $stash $paths
    fi
  fi
}

perform_stash(){
  root=$1
  paths=$2
  
  if [ ! -d $root ]; then
    mkdir -p $root
  fi
  
  for path in ${paths[*]}; do
    dest=$root/$(dirname $path)
    
    if [ ! -d $dest ]; then
      mkdir -p $dest
    fi
    
    cp -i -R $path $dest
  done
}

prepare_unstash(){
  stash=$1
  paths=($(find $stash -type f | grep -v .description | perl -lpe "s/^.*\d+\///"))
  
  if [ ! -d $stash -o ${#paths[*]} = 0 ]; then
    echo "Nothing stashed there."
  else
    cat $stash/.description
    echo
    
    for path in ${paths[*]}; do
      echo "  $path"
    done
    
    echo
    echo -n "Unstash these files to $PWD? "
    read reply
    
    if [ "x${reply:0:1}" != "xy" ]; then
      exit 1
    else
      perform_unstash $stash $paths
    fi
  fi
}

perform_unstash(){
  root=.
  stash=$1
  paths=$2
  
  for path in ${paths[*]}; do
    dest=$root/$(dirname $path)
    
    if [ ! -d $dest ]; then
      mkdir -p $dest
    fi
    
    cp -i $stash/$path $dest
  done
}

getopts "u" unstash
shift $(($OPTIND - 1))

if [ -z "$1" ]; then
  usage
  exit 1
fi

stash="$stash_root/$1"

if [ "x$unstash" = "xu" ]; then
  prepare_unstash $stash
else
  prepare_stash $stash
fi
